#! /usr/bin/env python

import sys
import re
import os
import time
import subprocess

prog = os.path.basename(sys.argv[0])

def usage():
  sys.exit("usage: %s <minutes>[:<seconds>]")

if len(sys.argv) != 2:
  usage()

m = re.match(r"^([0-9]?)(:[0-9][0-9])?$", sys.argv[1])
if not m:
  usage()

if os.fork() != 0 or os.fork() != 0:
  sys.exit()

seconds = 0
if m.group(1):
  seconds += 60 * int(m.group(1))
if m.group(2):
  seconds += int(m.group(2)[1:])

# format file
def ft(seconds):
  if seconds < 0:
    return "-" + ft(-seconds)
  else:
    return "%d:%02d" % (seconds // 60, seconds % 60)

title = "Timing for %s" % ft(seconds)

proc = subprocess.Popen(
  ["zenity", "--class=teatime-running", "--progress", "--title=" + title],
  stdin=subprocess.PIPE)
done = False
start = int(time.time())
while True:
  now = int(time.time())
  elapsed = now - start
  remaining = seconds - elapsed
  if remaining < 0:
    if not done:
      done = True
      os.kill(proc.pid, 15)
      proc.wait()
      proc = subprocess.Popen(
        ["zenity", "--class=teatime-done", "--progress", "--pulsate", "--title=" + title],
        stdin=subprocess.PIPE)
  if not done:
    proc.stdin.write("%s\n" % (100 * elapsed // seconds))
  proc.stdin.write("# %s remaining\n" % ft(remaining))
  time.sleep(1)

# subprocess.call(
#   ["zenity", "--class=" + prog, "--info", "--text=Done timing for %s." % ft(seconds)])
